#!/bin/bash

if [ -z "$BASH_VERSION" ]; then
	/bin/bash -- $0 "$@"
	exit $?
fi

SVBASE=$(basename $0)
if [ "0" -le "${SVBASE%%.*}" ] 2>/dev/null; then
	SVBASE=${SVBASE##*.}
fi
SVBASEUC=$(echo $SVBASE | tr a-z A-Z)
SVCMD=$1
shift
SVCMD=${SVCMD:-"help"}

evaldir() {
	NAME=$1
	DEFAULT=$2
	SUFFIX=$3
	declare -nr CONFIGVAR="${SVBASEUC}_${NAME}"
	declare -nr SVCONFIGVAR="SV_${NAME}"
	if [ -n "$CONFIGVAR" ]; then
		VALUE="$CONFIGVAR"
	elif [ -n "$SVCONFIGVAR" ]; then
		VALUE="$SVCONFIGVAR/$SUFFIX"
	else
		VALUE="$DEFAULT/$SUFFIX"
	fi
	echo ${SVBASEDIR}${VALUE}

}

# call an external application
# cmdline-arguments are passed via EXARGV
# applications return-value is given via RVAL
# return true, when the command was found
call() {
	for i in "$@"; do
		if [ -f "$i.sh" ]; then
			set -- "${EXARGV[@]}"
			. "$i.sh"
			export RVAL=$?
			return 0
		elif [ -x "$i" ]; then
			exec "$i" "${EXARGV[@]}"
			export RVAL=$?
			return 0
		fi
	done
	return 1
}

parse_config() {
	for i in "$@"; do
		if [ -f "$i" ]; then
			. $i
		fi
		if [ -d "$i" -o -d "$i.d" ]; then
			dir=$([ -d "$i.d" ] && echo "$i.d" || echo "$i")
			for f in $dir/*.conf; do
				. $f
			done
		fi
	done
}

sv_parse_options() {
	declare -gA SV_OPTION
	declare -gA SV_SHORT_OPTION
	declare -g SV_AUTO_OPTIONS
	while [ $# -gt 0 ]; do
		_OPTDESC=
		case "$1" in
			--*)
				_OPTDESC="${SV_OPTION[${1##--}]}"
				if [ -z "$_OPTDESC" -a "$SV_AUTO_OPTIONS" == 1 ]; then
					_OPTDESC=$(echo ${1##--} | tr a-z A-Z)
					if [ "${2:0:1}" == "-" ]; then
						_OPTDESC=":$_OPTDESC"
					fi
				fi
			;;
			-?)
				_OPTDESC="${SV_SHORT_OPTION[${1##-}]}"
			;;
		esac
		if [ -z "$_OPTDESC" ]; then
			break
		fi
		shift
		case "${_OPTDESC:0:1}" in
			":")
		       		_OPTDESC=${_OPTDESC:1}
				VALUE=1
				;;
			[A-Z0-9])
				VALUE=$1
				shift
				;;
			*)
				echo "$0: invalid option flag for '${_OPTDESC}'"
				exit 1
				;;
		esac
		declare -n NAME="$_OPTDESC"
		NAME="$VALUE"
	done
	declare -ga SV_UNPARSED=("$@")
	return $#
}

SVSHAREDDIR=$(evaldir SHARED_DIR /usr/share ${SVBASE})
SVEXEC=$(evaldir SUBCMD_DIR /usr/lib ${SVBASE}/subverb)

declare -a EXARGV=("$@")
if call "${SVEXEC}-pre"; then
	if [ $RVAL -ne 0 ]; then
		echo "$0: command preparation failed"
		exit $RVAL
	fi
fi

declare -nr CONFIGNAME="${SVBASEUC}_CONFIGNAME"
if [ -z "$CONFIGNAME" ]; then
	CONFIGNAME="config"
fi
parse_config "$SVSHAREDDIR/$CONFIGNAME"
parse_config "$(evaldir SYSCONFIG /etc ${SVBASE})"
parse_config "$HOME/.${SVBASE}"
parse_config "$HOME/.config/${SVBASE}"

if ! call "${SVEXEC}/${SVBASE}-${SVCMD}" "${SVEXEC}/${SVCMD}"; then
	cat 1>&2 <<ERR
subcommand ${SVCMD} isn't known.
Try '${SVBASE} help' for a list of allowed commands
ERR
	exit 1
fi

RET=$RVAL
call "${SVEXEC}-post"

exit $RET
